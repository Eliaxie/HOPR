{"version":3,"sources":["DisplayResponse.tsx","App.tsx","index.tsx"],"names":["DisplayResponse","response","className","status","style","color","ok","statusText","App","useState","message","setMessage","securityToken","setSecurityToken","httpEndpoint","setHTTPEndpoint","address","setAddress","setResponse","getHeaders","isPost","headers","Headers","set","btoa","sendMessage","a","request","method","body","JSON","stringify","recipient","console","log","fetch","catch","err","error","name","placeholder","type","value","onChange","e","target","onClick","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.06c119d3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport const DisplayResponse: React.FC<\n{ response: Response | void | undefined }> \n= ({ response }): JSX.Element => {\n    return <div className = \"response\"> { response?\n    <ul className=\"obj collapsible\">\n        <li><div className=\"hoverable\">\n            <span className=\"property token string\">Status:</span>: <span className=\"token string\"> \n            {response?.status === 204 ? <span >success</span> : <span style={{color: \"red\"}}> failure</span>} \n            </span><span className=\"token punctuation\">,</span>\n            </div>\n        </li> { response.status === 204?\n        <li><div className=\"hoverable\"><span className=\"property token string\">Ok:</span>: <span className=\"token string\"> {response.ok ? \"true\" : \"false\"}</span></div></li> \n        :<li><div className=\"hoverable\"><span className=\"property token string\">Error:</span>: <span className=\"token string\"> {response.statusText} </span></div></li>\n        } </ul> : <></>}\n    </div>\n}\n\nexport default DisplayResponse;\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport { DisplayResponse } from \"./DisplayResponse\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [message, setMessage] = useState(\"Hello world\");\n  const [securityToken, setSecurityToken] = useState(\"^^LOCAL-testing-123^^\");\n  const [httpEndpoint, setHTTPEndpoint] = useState(\"http://127.0.0.1:13301\");\n  const [address, setAddress] = useState(\"16Uiu2HAmEr9FRBxgpnmvubnH56hgfLZmQi4BMn8kM8EBxusa9X36\");\n  const [response, setResponse] = useState<Response | void | undefined>();\n\n  const getHeaders = (isPost = false) => {\n    const headers = new Headers();\n    if (isPost) {\n      headers.set(\"Content-Type\", \"application/json\");\n      headers.set(\"Accept-Content\", \"application/json\");\n    }\n    headers.set(\"Authorization\", \"Basic \" + btoa(securityToken));\n    return headers;\n  };\n\n  const sendMessage = async () => {\n    if (!address) return;\n    let request = {   \n      method: \"POST\",\n      headers: getHeaders(true),\n      body: JSON.stringify({\n        recipient: address,\n        body: \"$&RelayedTx&$\" + message\n      })\n    }\n    console.log(\"request\", request)\n    let response = await fetch(`${httpEndpoint}/api/v2/messages`, request).catch((err) => console.error(err));\n    setResponse(response)\n    console.log(\"response\", response)\n  };\n\n  return (\n    <div className=\"flex\">\n      <div className=\"flex-container\">\n        <div className=\"content-container\">\n          <div className=\"form-container\">\n            <form>\n              <h1>\n                Send transaction\n              </h1>\n              <br/>\n              <br/>\n              <span className=\"subtitle\">Local HTTP Endpoint:</span>\n              <br/>\n              <input\n                  name=\"httpEndpoint of local node\"\n                  placeholder={httpEndpoint}\n                  type=\"text\"\n                  value={httpEndpoint}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    setHTTPEndpoint(e.target.value)\n                  }\n                />\n              <br/>\n              <span className=\"subtitle\">Remote Address:</span>\n              <br/>\n              <input\n                name=\"Address of remote node\"\n                placeholder={address}\n                value={address}\n                type=\"text\"\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  setAddress(e.target.value)\n                }\n              />\n              <br/>\n              <span className=\"subtitle\">Security Token:</span>\n              <br/>\n              <input\n                name=\"securityToken\"\n                placeholder={securityToken}\n                value={securityToken}\n                type=\"text\"\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  setSecurityToken(e.target.value)\n                }\n              />\n              <br/>\n              <span className=\"subtitle\">Transaction:</span>\n              <br/>\n              <input\n                name=\"httpEndpoint\"\n                value={message}\n                placeholder={message}\n                type=\"text\"\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                  setMessage(e.target.value)\n                }\n              />\n              <br/><br/>\n              <input value=\"Send\" type=\"button\" className=\"submit-btn\" onClick={() => sendMessage()} />\n            </form>\n            <DisplayResponse response={response}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}